name: Cypress Tests

on:
  push:

env:
  percy-comment-title: Percy Snapshot Comparison
  percy-comment-id: percy-status

jobs:
  build:
    name: Build UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Comment Percy status on PR
        uses: skylark-platform/comment-url-on-pr@v1
        with:
          title: ${{ env.percy-comment-title }}
          comment_id: ${{ env.percy-comment-id }}
          status: building
          github_token: ${{ github.token }}
      - uses: cypress-io/github-action@v4
        with:
          runTests: false
      - run: yarn build
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: .next

  tests:
    name: Run Cypress Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next
      - name: UI Tests
        uses: cypress-io/github-action@v4
        with:
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          config-file: cypress.config.ts
          command-prefix: "percy exec --parallel -- npx"
          group: "Skylark UI"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

  percy:
    name: Check Percy Build Status
    if: always()
    runs-on: ubuntu-latest
    needs: tests
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: yarn
      - run: yarn add @percy/client
      - name: Percy Finalize
        uses: actions/github-script@v6
        id: percy-info
        env:
          PERCY_PARALLEL_TOTAL: "-1"
        with:
          script: |
            const { PercyClient } = await import('${{ github.workspace }}/node_modules/@percy/client/dist/index.js')

            const client = new PercyClient({
              token: process.env.PERCY_TOKEN,
            })

            // Copied from Percy CLI https://github.com/percy/cli/blob/acf5d99373782fa47cc79dababead812679d0054/packages/cli-build/src/finalize.js#L22
            // rely on the parallel nonce to cause the API to return the current running build for the nonce
            const { data: build } = await client.createBuild();
            console.log("build", build)
            await client.finalizeBuild(build.id, { all: true });

            const { 'web-url': url } = build.attributes;
            core.setOutput("url", url);
            core.setOutput("build-id", build.id);

      - name: Percy Build Wait
        id: percy-build-wait
        continue-on-error: true
        run: yarn percy build:wait --fail-on-changes --build ${{ steps.percy-info.outputs.build-id }}
      - uses: actions/github-script@v6
        id: percy-url
        env:
          STATUS: ${{ steps.percy-build-wait.outcome }}
        with:
          result-encoding: string
          script: |
            const emoji = process.env.STATUS === "success" ? "âœ…" : "ðŸš«";
            const label = process.env.STATUS === "success" ?  "Percy build (all good)" : "Percy build (changes detected)";
            const json = JSON.stringify([
              { emoji, label, value: "${{ steps.percy-info.outputs.url }}" },
            ]);
            return json;
      - name: Comment Percy status on PR
        uses: skylark-platform/comment-url-on-pr@v1
        with:
          title: ${{ env.percy-comment-title }}
          comment_id: ${{ env.percy-comment-id }}
          status: success
          github_token: ${{ github.token }}
          additional_urls: ${{ steps.percy-url.outputs.result }}
